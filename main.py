# Python code @beducode
 

import base64, codecs
magic = 'aW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmltcG9ydCByYW5kb20NCmltcG9ydCBvcw0KaW1wb3J0IGFyZ3BhcnNlDQppbXBvcnQgY29sb3JhbWENCmltcG9ydCBzdHJpbmcNCmltcG9ydCB0cmFjZWJhY2sNCmltcG9ydCB1cmxsaWINCmltcG9ydCBwYXRobGliDQpmcm9tIGNvbG9yYW1hIGltcG9ydCBGb3JlLCBCYWNrLCBTdHlsZQ0KZnJvbSByYW5kb20gaW1wb3J0IHJhbmRpbnQNCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lDQppbXBvcnQgcHlzaG9ydGVuZXJzDQpmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCBSZXF1ZXN0LCB1cmxvcGVuDQpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cA0KZnJvbSBmYWtlX3VzZXJhZ2VudCBpbXBvcnQgVXNlckFnZW50DQpmcm9tIG9zIGltcG9ydCBzeXN0ZW0sIG5hbWUNCmZyb20gaW5wdXRpbWVvdXQgaW1wb3J0IGlucHV0aW1lb3V0LCBUaW1lb3V0T2NjdXJyZWQNCmZyb20gZmF1bmFkYiBpbXBvcnQgcXVlcnkgYXMgcQ0KZnJvbSBmYXVuYWRiLm9iamVjdHMgaW1wb3J0IFJlZg0KZnJvbSBmYXVuYWRiLmNsaWVudCBpbXBvcnQgRmF1bmFDbGllbnQNCmNvbG9yYW1hLmluaXQoYXV0b3Jlc2V0PVRydWUpDQoNCiMgU0VUIEJFVFNFVA0KcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoDQogICAgZGVzY3JpcHRpb249Jzk5OSBEaWNlIEJvdCB8IFRoaXMgSXMgR2FtYmxpbmcgQm90IFBsYXNlIFRha2UgT3duIFlvdXIgUmlzaycpDQpwYXJzZXIuYWRkX2FyZ3VtZW50KA0KICAgICctYycsICctLWJldHNldCcsDQogICAgZGVmYXVsdD0wLA0KICAgIGhlbHA9J0VudGVyIFlvdXIgQmV0c2V0IE51bWJlciAoZGVmYXVsdDogMCknDQopDQpteV9uYW1lc3BhY2UgPSBwYXJzZXIucGFyc2VfYXJncygpDQoNCndpdGggb3Blbignc2V0dGluZ3MuanNvbicsICdyJykgYXMgbXlmaWxlOg0KICAgIGRhdGEgPSBteWZpbGUucmVhZCgpDQojIFBBUlNFIEZJTEUNCm9iaiA9IGpzb24ubG9hZHMoZGF0YSkNCg0KDQojIENPTkZJRyBXQVJOQQ0KcmVzID0gU3R5bGUuUkVTRVRfQUxMDQpwdXRpaCA9IFN0eWxlLk5PUk1BTCtGb3JlLldISVRFDQpwdXRpaDIgPSBTdHlsZS5CUklHSFQrRm9yZS5XSElURQ0KaGl0YW0gPSBTdHlsZS5CUklHSFQrRm9yZS5CTEFDSw0KaGl0YW0yID0gU3R5bGUuQlJJR0hUK0ZvcmUuQkxBQ0sNCnVuZ3UgPSBTdHlsZS5OT1JNQUwrRm9yZS5NQUdFTlRBDQpoaWphdSA9IFN0eWxlLk5PUk1BTCtGb3JlLkdSRUVODQpoaWphdTIgPSBTdHlsZS5CUklHSFQrRm9yZS5HUkVFTg0KbWVyYWggPSBTdHlsZS5OT1JNQUwrRm9yZS5SRUQNCm1lcmFoMiA9IFN0eWxlLkJSSUdIVCtGb3JlLlJFRA0KYmlydSA9IFN0eWxlLk5PUk1BTCtGb3JlLkJMVUUNCmJpcnUyID0gU3R5bGUuQlJJR0hUK0ZvcmUuQkxVRQ0KYmlydTMgPSBTdHlsZS5CUklHSFQrRm9yZS5MSUdIVENZQU5fRVgNCnByb2ZpdGNvbG9yID0gU3R5bGUuQlJJR0hUK0JhY2suR1JFRU4rRm9yZS5XSElURQ0KbG9zZWNvbG9yID0gU3R5bGUuQlJJR0hUK0JhY2suUkVEK0ZvcmUuV0hJVEUNCnJjY29sb3IgPSBTdHlsZS5CUklHSFQrQmFjay5XSElURStGb3JlLkJMQUNLDQpyY2ZvbnRjb2xvciA9IFN0eWxlLk5PUk1BTCtGb3JlLkJMQUNLDQprdW5pbmcgPSBTdHlsZS5OT1JNQUwrRm9yZS5ZRUxMT1cNCmt1bmluZzIgPSBTdHlsZS5CUklHSFQrRm9yZS5ZRUxMT1cNCg0KYyA9IHJlcXVlc3RzLnNlc3Npb24oKQ0KdWEgPSBVc2VyQWdlbnQoKQ0KcHJveGllcyA9IFtdDQpwcm94eXN0YXR1cyA9IEZhbHNlDQpmcmVldmVyc2lvbiA9IFRydWUNCmxpbmtjb2RlID0gIiINCmNsaWVudCA9IEZhdW5hQ2xpZW50KHNlY3JldD0iZm5BRUFjQUtsaUFDQ0pIMDBCZlZTSDJkUFowRUlNUFdIbE1DVGJFWCIpDQoNCmRlZiBzZXRtc2dib3goKToNCiAgICANCiAgICB0cnk6DQogICAgICAgIG1zZyA9IGNsaWVudC5xdWVyeSgNCiAgICAgICAgICAgIHEuZ2V0KHEubWF0Y2gocS5pbmRleCgicGFyYW1fYnlfaWQiKSwgIm1lc3NhZ2Vib3giKSkpDQogICAgICAgIG1zZ2JveCA9IG1zZ1siZGF0YSJdWyJtZXNzYWdlIl0NCiAgICBleGNlcHQ6DQogICAgICAgIG1zZ2JveCA9ICItIg0KDQogICAgcmV0dXJuIG1zZ2JveA0KDQoNCmRlZiBiYW5uZXIoKToNCiAgICAjIEJBTk5FUg0KICAgIGJhbm5lciA9ICJcblxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArIG1lcmFoMiArICLCt+KWhOKWhOKWhOKWhCAg4paqICAg4paE4paEwrcg4paE4paE4paEIC7iloTiloTiloTiloTCtyAgICAgIOKWhOKWhOKWhOKWhOKWhFxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArICLilojilojilqog4paI4paIIOKWiOKWiCDilpDilogg4paM4paq4paA4paELuKWgMK34paQ4paIIOKWgOKWiOKWquKWqiAgICDigKLilojiloggIFxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArICLilpDilojCtyDilpDilojilozilpDilojCt+KWiOKWiCDiloTiloTilpDiloDiloDilqriloTilpDilojiloDiloDilojiloQg4paE4paI4paA4paEIOKWkOKWiC4iICsgcHV0aWgyICsgIuKWqlxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArICLilojiloguIOKWiOKWiCDilpDilojilozilpDilojilojilojilozilpDilojiloTiloTilozilojilojiloTilqrilpDilojilpDilojilowu4paQ4paM4paQ4paI4paMwrdcbiINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyAi4paA4paA4paA4paA4paA4oCiIOKWgOKWgOKWgMK34paA4paA4paAICDiloDiloDiloAgwrfiloDiloDiloDiloAgIOKWgOKWiOKWhOKWgOKWquKWgOKWgOKWgFxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArICJcbiINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBwdXRpaDIgKyAiQXV0aG9yICAgICAgOiAiDQogICAgYmFubmVyID0gYmFubmVyICsgbWVyYWgyICsgImdpdGh1YkBiZWR1Y29kZVxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArIHB1dGloMiArICJBZHZpc29yICAgICA6ICINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBtZXJhaDIgKyAiQHJpb3N1eWFudG9cbiINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBwdXRpaDIgKyAiQ29udGFjdCAgICAgOiAiDQogICAgYmFubmVyID0gYmFubmVyICsgbWVyYWgyICsgIkBiZWR1cGxheSAvIEByaW9zdXlhbnRvXG4iDQogICAgYmFubmVyID0gYmFubmVyICsgcHV0aWgyICsgIlZlcnNpb24gICAgIDogIg0KICAgIGJhbm5lciA9IGJhbm5lciArIG1lcmFoMiArICJ2LjIuMFxuIiArIHJlcw0KICAgIHByaW50KGJhbm5lcikNCg0KDQp1cmwgPSAiaHR0cHM6Ly93d3cuOTk5ZG9nZS5jb20vYXBpL3dlYi5hc3B4Ig0KdWFkYXRhID0gew0KICAgICJPcmlnaW4iOiAiZmlsZTovLyIsDQogICAgInVzZXItYWdlbnQiOiB1YS5yYW5kb20sDQogICAgIkNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiLA0KICAgICJBY2NlcHQiOiAiKi8qIiwNCiAgICAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IiwNCiAgICAiWC1SZXF1ZXN0ZWQtV2l0aCI6ICJjb20ucmVsYW5kLnJlbGFuZGljZWJvdCINCn0NCg0KIyBDTEVBTiBQQUdFDQoNCg0KZGVmIGNsZWFyKCk6DQoNCiAgICAjIGZvciB3aW5kb3dzDQogICAgaWYgbmFtZSA9PSAnbnQnOg0KICAgICAgICBfID0gc3lzdGVtKCdjbHMnKQ0KDQogICAgIyBmb3IgbWFjIGFuZCBsaW51eChoZXJlLCBvcy5uYW1lIGlzICdwb3NpeCcpDQogICAgZWxzZToNCiAgICAgICAgXyA9IHN5c3RlbSgnY2xlYXInKQ0KDQojIENPTlZFUlQgQkVUICYgQU1PVU5UDQoNCg0KZGVmIGtvbnZlcnQocGVyc2VuLCB0YXJ1aGFuKToNCiAgICBnbG9iYWwgaGlnaA0KICAgIGdsb2JhbCBsb3cNCiAgICBjID0gc3RyKDk5OTk5OSAqIGZsb2F0KHBlcnNlbikgLyAxMDApDQogICAgaWYgdGFydWhhbiA9PSAiSGkiIG9yIHRhcnVoYW4gPT0gImhpIiBvciB0YXJ1aGFuID09ICJISSI6DQogICAgICAgIG4gPSBzdHIoYy5zcGxpdCgiLiIpWzFdKQ0KICAgICAgICBwYW5na2F0ID0gNiAtIGxlbihuKQ0KICAgICAgICBsb3cgPSBpbnQoaW50KG4pICogKDEwICoqIHBhbmdrYXQpKQ0KICAgICAgICBoaWdoID0gOTk5OTk5DQogICAgaWYgdGFydWhhbiA9PSAiTG8iIG9yIHRhcnVoYW4gPT0gIkxPVyIgb3IgdGFydWhhbiA9PSAibG93IiBvciB0YXJ1aGFuID09ICJMb3ciIG9yIHRhcnVoYW4gPT0gIkxPIjoNCiAgICAgICAgbG93ID0gMA0KICAgICAgICBoaWdoID0gaW50KGMuc3BsaXQoIi4iKVswXSkNCg0KIyBERUNJTUFMIDggRElHSVQNCg0KDQpkZWYgcmV2KG51bSk6DQogICAgaWYgKGxlbihudW0pIDwgOCk6DQogICAgICAgIHBhbmphbmdfbm9sID0gaW50KDggLSBsZW4obnVtKSkNCiAgICAgICAgbnVtID0gKChwYW5qYW5nX25vbCoiMCIpK3N0cihudW0pKQ0KICAgICAgICByZXN1bHQgPSAoIjAuIitudW0pDQogICAgaWYgKGxlbihudW0pID09IDgpOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCg4IC0gbGVuKG51bSkpDQogICAgICAgIG51bSA9ICgocGFuamFuZ19ub2wqIjAiKStzdHIobnVtKSkNCiAgICAgICAgcmVzdWx0ID0gKCIwLiIrbnVtKQ0KICAgIGVsc2U6DQogICAgICAgIGxlbl9udW0gPSBsZW4obnVtKQ0KICAgICAgICBlbmQgPSBudW1bLTg6XQ0KICAgICAgICBmaXJzdCA9IG51bVs6bGVuX251bS04XQ0KICAgICAgICByZXN1bHQgPSAoZmlyc3QrIi4iK2VuZCkNCiAgICByZXR1cm4gKHJlc3VsdCkNCg0KIyBBUEkgSU5ET0RBWCBGT1IgR0VUIExBU1QgUFJJQ0UNCg0KDQpkZWYgaW5kb2RheChjb2luKToNCiAgICANCiAgICB0cnk6DQogICAgICAgIGlmIGNvaW4gPT0gIkRPR0UiIG9yIGNvaW4gPT0gImRvZ2UiIG9yIGNvaW4gPT0gIkRvZ2UiOg0KICAgICAgICAgICAgcGFpciA9ICJkb2dlX2lkciINCiAgICAgICAgZWxpZiBjb2luID09ICJMVEMiIG9yIGNvaW4gPT0gImx0YyIgb3IgY29pbiA9PSAiTHRjIjoNCiAgICAgICAgICAgIHBhaXIgPSAibHRjX2lkciINCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHBhaXIgPSAiZXRoX2lkciINCiAgICAgICAgICAgIA0KICAgICAgICB1cmwgPSAnaHR0cHM6Ly9pbmRvZGF4LmNvbS9hcGkvJyArIHN0cihwYWlyKSArICcvdGlja2VyJw0KDQogICAgICAgIGluZHggPSByZXF1ZXN0cy5nZXQodXJsKQ0KICAgICAgICBqc2luZHggPSBqc29uLmxvYWRzKGluZHgudGV4dCkNCiAgICAgICAgcHJpY2VwYWlyID0gaW50KGpzaW5keFsidGlja2VyIl1bImxhc3QiXSkNCiAgICBleGNlcHQ6DQogICAgICAgIGlmIGNvaW4gPT0gIkRPR0UiIG9yIGNvaW4gPT0gImRvZ2UiIG9yIGNvaW4gPT0gIkRvZ2UiOg0KICAgICAgICAgICAgY29pbnBhaXIgPSAiZG9nZSINCiAgICAgICAgZWxpZiBjb2luID09ICJMVEMiIG9yIGNvaW4gPT0gImx0YyIgb3IgY29pbiA9PSAiTHRjIjoNCiAgICAgICAgICAgIGNvaW5wYWlyID0gImx0YyINCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGNvaW5wYWlyID0gImV0aCINCiAgICAgICAgICAgIA0KICAgICAgICB1cmwgPSAiaHR0cHM6Ly9iZWR1Y29kZS1wcmljZS5oZXJva3VhcHAuY29tL3ByaWNlLyIgKyBzdHIoY29pbnBhaXIpDQoNCiAgICAgICAgcHJpY2UgPSBjLmdldCh1cmwpDQogICAgICAgIGRhdGEgPSBqc29uLmxvYWRzKHByaWNlLnRleHQpDQogICAgICAgIHByaWNlcGFpciA9IGRhdGFbImxhc3QiXQ0KDQogICAgcmV0dXJuIHByaWNlcGFpcg0KDQojIEZPUk1BVCBWQUxVRSBUTyBJRFINCg0KDQpkZWYgcnVwaWFoX2Zvcm1hdChhbmdrYSk6DQogICAgcmV0dXJuICdScCAnICsgJ3s6MCwuMmZ9Jy5mb3JtYXQoYW5na2EpDQoNCiMgR0VORVJBVEUgU1RSSU5HDQoNCg0KZGVmIHN0cmluZ2dlbihOKToNCiAgICByZXNwID0gJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfdXBwZXJjYXNlICsgc3RyaW5nLmRpZ2l0cywgaz1OKSkNCiAgICByZXR1cm4gc3RyKHJlc3ApDQoNCg0KIyBGSU5EIFBST1hZDQpkZWYgZmluZHByb3h5KCk6DQogICAgIyBSZXRyaWV2ZSBsYXRlc3QgcHJveGllcw0KICAgIHByb3hpZXNfcmVxID0gUmVxdWVzdCgnaHR0cHM6Ly93d3cuc3NscHJveGllcy5vcmcvJykNCiAgICBwcm94aWVzX3JlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JywgdWEucmFuZG9tKQ0KICAgIHByb3hpZXNfZG9jID0gdXJsb3Blbihwcm94aWVzX3JlcSkucmVhZCgpLmRlY29kZSgndXRmOCcpDQoNCiAgICBzb3VwID0gQmVhdXRpZnVsU291cChwcm94aWVzX2RvYywgJ2h0bWwucGFyc2VyJykNCiAgICBwcm94aWVzX3RhYmxlID0gc291cC5maW5kKGlkPSdwcm94eWxpc3R0YWJsZScpDQoNCiAgICAjIFNhdmUgcHJveGllcyBpbiB0aGUgYXJyYXkNCiAgICBmb3Igcm93IGluIHByb3hpZXNfdGFibGUudGJvZHkuZmluZF9hbGwoJ3RyJyk6DQogICAgICAgIHByb3hpZXMuYXBwZW5kKHsNCiAgICAgICAgICAgICdpcCc6ICAgcm93LmZpbmRfYWxsKCd0ZCcpWzBdLnN0cmluZywNCiAgICAgICAgICAgICdwb3J0Jzogcm93LmZpbmRfYWxsKCd0ZCcpWzFdLnN0cmluZw0KICAgICAgICB9KQ0KDQogICAgIyBDaG9vc2UgYSByYW5kb20gcHJveHkNCiAgICBwcm94eV9pbmRleCA9IHJhbmRvbV9wcm94eSgpDQogICAgcHJveHkgPSBwcm94aWVzW3Byb3h5X2luZGV4XQ0KDQogICAgZm9yIG4gaW4gcmFuZ2UoMSwgMTAwKToNCiAgICAgICAgcmVxID0gUmVxdWVzdCgnaHR0cDovL3d3dy45OTlkb2dlLmNvbScpDQogICAgICAgIHJlcS5zZXRfcHJveHkocHJveHlbJ2lwJ10gKyAnOicgKyBwcm94eVsncG9ydCddLCAnaHR0cCcpDQoNCiAgICAgICAgIyBFdmVyeSAxMCByZXF1ZXN0cywgZ2VuZXJhdGUgYSBuZXcgcHJveHkNCiAgICAgICAgaWYgbiAlIDEwID09IDA6DQogICAgICAgICAgICBwcm94eV9pbmRleCA9IHJhbmRvbV9wcm94eSgpDQogICAgICAgICAgICBwcm94eSA9IHByb3hpZXNbcHJveHlfaW5kZXhdDQoNCiAgICAgICAgIyBNYWtlIHRoZSBjYWxsDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHByaW50KCcgIE1vaG9uIHR1bmdndSwgc2VkYW5nIG1lbmNhcmkgcHJveHkgc2ViZWx1bSBydW5uaW5nLi4uICcgKyBTdHlsZS5CUklHSFQrQmFjay5HUkVFTiArDQogICAgICAgICAgICAgICAgICBGb3JlLldISVRFICsgJyBDSEVDSyBTRVJWRVIgIyAnICsgc3RyKHByb3h5X2luZGV4KSArICcgJyArIFN0eWxlLlJFU0VUX0FMTCArICcgJywgZW5kPSJcciIgKyByZXMpDQogICAgICAgICAgICB1cmxvcGVuKHJlcSwgdGltZW91dD01KS5yZWFkKCkuZGVjb2RlKCd1dGY4JykNCiAgICAgICAgICAgIHJldHVybiBwcm94aWVzW3Byb3h5X2luZGV4XQ0KICAgICAgICBleGNlcHQ6ICAjIElmIGVycm9yLCBkZWxldGUgdGhpcyBwcm94eSBhbmQgZmluZCBhbm90aGVyIG9uZQ0KICAgICAgICAgICAgZGVsIHByb3hpZXNbcHJveHlfaW5kZXhdDQogICAgICAgICAgICBwcm94eV9pbmRleCA9IHJhbmRvbV9wcm94eSgpDQogICAgICAgICAgICBwcm94eSA9IHByb3hpZXNbcHJveHlfaW5kZXhdDQoNCg0KZGVmIGNla3Byb3h5bWFudWFsKGlwLCBwb3J0KToNCiAgICByZXEgPSBSZXF1ZXN0KCdodHRwOi8vd3d3Ljk5OWRvZ2UuY29tJykNCiAgICByZXEuc2V0X3Byb3h5KGlwICsgJzonICsgcG9ydCwgJ2h0dHAnKQ0KICAgIHRyeToNCiAgICAgICAgdXJsb3BlbihyZXEsIHRpbWVvdXQ9NSkucmVhZCgpLmRlY29kZSgndXRmOCcpDQogICAgICAgIHN0YXR1cyA9IFRydWUNCiAgICBleGNlcHQ6DQogICAgICAgIHN0YXR1cyA9IEZhbHNlDQoNCiAgICByZXR1cm4gc3RhdHVzDQoNCg0KZGVmIHJhbmRvbV9wcm94eSgpOg0KICAgIHJldHVybiByYW5kb20ucmFuZGludCgwLCBsZW4ocHJveGllcykgLSAxKQ0KDQoNCmRlZiBzZXRQcm94eSgpOg0KICAgIGlmIG9ialsiUHJveHkgTWFudWFsIl1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJQcm94eSBNYW51YWwiXVsiVG9nZ2xlIl0gPT0gIm9uIiBvciBvYmpbIlByb3h5IE1hbnVhbCJdWyJUb2dnbGUiXSA9PSAiT24iOg0KICAgICAgICBpcCA9IHN0cihvYmpbIlByb3h5IE1hbnVhbCJdWyJJcCJdKQ0KICAgICAgICBwb3J0ID0gc3RyKG9ialsiUHJveHkgTWFudWFsIl1bIlBvcnQiXSkNCiAgICAgICAgcHJveHlzdGF0dXMgPSBjZWtwcm94eW1hbnVhbChpcCwgcG9ydCkNCg0KICAgICAgICBpZiBwcm94eXN0YXR1cyBpcyBUcnVlOg0KICAgICAgICAgICAgcHJveGllcyA9IGRpY3QoKQ0KDQogICAgICAgICAgICBwcm94aWVzWyJpcCJdID0gaXANCiAgICAgICAgICAgIHByb3hpZXNbInBvcnQiXSA9IHBvcnQNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHByb3h5c3RhdHVzID0gRmFsc2UNCg0KICAgIGVsc2U6DQogICAgICAgIGlmIG9ialsiQWNjb3VudCJdWyJBdXRvIFByb3h5Il0gPT0gIk9OIiBvciBvYmpbIkFjY291bnQiXVsiQXV0byBQcm94eSJdID09ICJvbiIgb3Igb2JqWyJBY2NvdW50Il1bIkF1dG8gUHJveHkiXSA9PSAiT24iOg0KDQogICAgICAgICAgICAjIENMRUFSIEJFRk9SRSBSVU5OSU5HDQogICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICBiYW5uZXIoKQ0KDQogICAgICAgICAgICBwcm94eXN0YXR1cyA9IFRydWUNCiAgICAgICAgICAgIHByb3hpZXMgPSBmaW5kcHJveHkoKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcHJveHlzdGF0dXMgPSBGYWxzZQ0KDQoNCmRlZiBjaGVja2N1cnIoY3Vycik6DQogICAgaWYgY3VyciA9PSAiRE9HRSIgb3IgY3VyciA9PSAiZG9nZSIgb3IgY3VyciA9PSAiRG9nZSI6DQogICAgICAgIGN1cnJiYWxhbmNlID0ganNbY3VycmVuY3ldWyJCYWxhbmNlIl0NCiAgICBlbGlmIGN1cnIgPT0gIkxUQyIgb3IgY3VyciA9PSAibHRjIiBvciBjdXJyID09ICJMdGMiOg0KICAgICAgICBjdXJyYmFsYW5jZSA9IGpzW2N1cnJlbmN5XVsiQmFsYW5jZSJdDQogICAgZWxzZToNCiAgICAgICAgY3VycmJhbGFuY2UgPSBqc1tjdXJyZW5jeV1bIkJhbGFuY2UiXQ0KDQogICAgcmV0dXJuIGN1cnJiYWxhbmNlDQoNCg0KZGVmIGNoZWNrbG9naW4oc3RhdHVzKToNCiAgICBpZiBzdGF0dXMgaXMgVHJ1ZToNCiAgICAgICAgY2xlYXIoKQ0KICAgICAgICBiYW5uZXIoKQ0KDQogICAgICAgIHByaW50KG1lcmFoMiArICJQZXJpa3NhIEtlbWJhbGkgVXNlcm5hbWUgQXRhdSBQYXNzd29yZCBBbmRhIFBhZGEgRmlsZSBzZXR0aW5ncy5qc29uIiArIHJlcykNCiAgICAgICAgc3lzLmV4aXQoKQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCg0KDQojIEZPUiBQVUJMSUMgVkVSU0lPTg0KZGVmIGNoZWNrY2NvdW50KGJhbGFjYywgdmVyc2lvbiwgY3Vycik6DQoNCiAgICBpZiBjdXJyID09ICJET0dFIiBvciBjdXJyID09ICJkb2dlIiBvciBjdXJyID09ICJEb2dlIjoNCiAgICAgICAgbGltaXRiYWwgPSAxMDANCiAgICBlbGlmIGN1cnIgPT0gIkxUQyIgb3IgY3VyciA9PSAibHRjIiBvciBjdXJyID09ICJMdGMiOg0KICAgICAgICBsaW1pdGJhbCA9IDAuMDAwMQ0KICAgIGVsc2U6DQogICAgICAgIGxpbWl0YmFsID0gMC4wMDAwMQ0KDQogICAgaWYgdmVyc2lvbiBpcyBUcnVlOg0KICAgICAgICBpZiBiYWxhY2MgPiBpbnQoZmxvYXQobGltaXRiYWwpKigxMCAqKiA4KSk6DQogICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICBiYW5uZXIoKQ0KDQogICAgICAgICAgICBwcmludChtZXJhaDIgKyAiQW5kYSBIYW55YSBEYXBhdCBNZW5nZ3VuYWthbiBCYWxhbmNlIE1ha3NpbWFsICIgKyBzdHIobGltaXRiYWwpICsgIiAiICsNCiAgICAgICAgICAgICAgICAgIHN0cihjdXJyKS51cHBlcigpICsgIiBQYWRhIFZlcnNpIEluaSwgU2lsYWhrYW4gSHVidW5naSBDb250YWN0IFVudHVrIEluZm9ybWFzaSBMZWJpaCBMYW5qdXQiICsgcmVzKQ0KICAgICAgICAgICAgc3lzLmV4aXQoKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcGFzcw0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCg0KDQojIENSRUFURSBDT0RFIEZPUiBTSE9SVExJTksgU0VSVkVSDQpkZWYgY3JlYXRlY29kZShjb2RlKToNCg0KICAgIGFwaSA9ICJodHRwczovL2JlZHVjb2RlLXBhc3MuaGVyb2t1YXBwLmNvbS9jcmVhdGUvIiArIGNvZGUNCg0KICAgIGNjb2RlID0gYy5nZXQoYXBpKQ0KICAgIGRhdGEgPSBqc29uLmxvYWRzKGNjb2RlLnRleHQpDQogICAgY2lkID0gZGF0YVsiY29kZV9pZCJdDQoNCiAgICByZXR1cm4gY2lkDQoNCiMgR0VUIExJTksgQ09ERSBGT1IgU0hPUlRMSU5LIFNFUlZFUg0KDQoNCmRlZiBnZXRsaW5rY29kZShjb2RlaWQpOg0KDQogICAgbGlua2NvZGUgPSAiaHR0cHM6Ly9iZWR1Y29kZS1wYXNzLmhlcm9rdWFwcC5jb20vIiArIGNvZGVpZA0KDQogICAgcmV0dXJuIGxpbmtjb2RlDQoNCiMgR0VUIFNIT1JUTElOSyBGUk9NIFNFUlZFUg0KDQoNCmRlZiBnZXRzaG9ydGxpbmsobGluayk6DQoNCiAgICBhcGkgPSAiaHR0cHM6Ly9iZWR1Y29kZS1saW5rLmhlcm9rdWFwcC5jb20vZ2VuZXJhdGUvIiArIGxpbmsNCg0KICAgIHJzaG9ydCA9IGMuZ2V0KGFwaSkNCiAgICBkYXRhID0ganNvbi5sb2Fkcyhyc2hvcnQudGV4dCkNCiAgICBzbCA9IGRhdGFbInVybCJdDQoNCiAgICByZXR1cm4gc2wNCg0KIyBHRU5FUkFURSBTSE9SVExJTksNCg0KDQpkZWYgY3JlYXRlTGluayhjb2RlKToNCiAgICBjb2RlaWQgPSBjcmVhdGVjb2RlKGNvZGUpDQogICAgbGlua3Bhc3Njb2RlID0gZ2V0bGlua2NvZGUoY29kZWlkKQ0KICAgIGxpbmt1cmwgPSBnZXRzaG9ydGxpbmsobGlua3Bhc3Njb2RlKQ0KDQogICAgcmV0dXJuIGxpbmt1cmwNCg0KIyBBVVRIIEZSRUUgVkVSU0lPTg0KDQoNCmRlZiBhdXRoZnJlZXZlcigpOg0KICAgIGdsb2JhbCBsaW5rY29kZQ0KICAgIGdsb2JhbCBwYXNzY29kZQ0KDQogICAgY2xlYXIoKQ0KICAgIGJhbm5lcigpDQoNCiAgICBpZiBsaW5rY29kZSA9PSAiIjoNCiAgICAgICAgcGFzc2NvZGUgPSBzdHJpbmdnZW4oMjApDQogICAgICAgIGxpbmtjb2RlID0gY3JlYXRlTGluayhwYXNzY29kZSkNCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQoNCiAgICBwcmludCgiTGluayA6ICIsIGxpbmtjb2RlKQ0KICAgICMgTUFTVUtBTiBQQVNTIERBUkkgU0hPUlRMSU5LDQogICAgdHJ5Og0KICAgICAgICBpbnB1dHBhc3MgPSBiaXJ1MiArICdccicgKyBwdXRpaDIgKyAnPj4gJyArIHJlcyArIGt1bmluZzIgKyBcDQogICAgICAgICAgICAnU2lsYWhrYW4gTWFzdWthbiBQYXNzd29yZCBEYXJpIExpbmsgRGkgQXRhcyA6ICcgKyByZXMNCiAgICAgICAgcGFzc2lucHV0ID0gaW5wdXRpbWVvdXQocHJvbXB0PWlucHV0cGFzcywgdGltZW91dD02MDApDQogICAgICAgIGlmIHBhc3NpbnB1dCA9PSAiIjoNCiAgICAgICAgICAgIGF1dGhmcmVldmVyKCkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGlmIHBhc3NpbnB1dCAhPSBwYXNzY29kZToNCiAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgYmFubmVyKCkNCiAgICAgICAgICAgICAgICBwcmludCgiUGFzc3dvcmQgWWFuZyBBbmRhIE1hc3VrYW4gU2FsYWgsIFNpbGFoa2FuIENvYmEgS2VtYmFsaSIpDQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgICAgIGF1dGhmcmVldmVyKCkNCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgbGlua2NvZGUgPSAiIg0KICAgICAgICAgICAgICAgIHBhc3Njb2RlID0gIiINCiAgICAgICAgICAgICAgICBwYXNzDQogICAgZXhjZXB0IFRpbWVvdXRPY2N1cnJlZDoNCiAgICAgICAgYXV0aGZyZWV2ZXIoKQ0KDQojIENIRUNLIE1FTUJFUiBTVEFUVVMNCg0KDQpkZWYgY2hlY2twcmVtc3RhdHVzKHBhc3Njb2RlKToNCiAgICB0cnk6DQogICAgICAgIG1lbWJlciA9IGNsaWVudC5xdWVyeSgNCiAgICAgICAgICAgIHEuZ2V0KHEubWF0Y2gocS5pbmRleCgibWVtYmVyX2J5X2NvZGUiKSwgcGFzc2NvZGUpKSkNCiAgICAgICAgc3RhdHVzID0gaW50KG1lbWJlclsiZGF0YSJdWyJtZW1iZXJfc3RhdHVzIl0pDQogICAgZXhjZXB0Og0KICAgICAgICBzdGF0dXMgPSAwDQoNCiAgICByZXR1cm4gc3RhdHVzDQoNCiMgQ1JFQVRFIEZJTEUgUEFTU0NPREUNCg0KDQpkZWYgY3JlYXRlZmlsZXBhc3MocGFzc2MpOg0KICAgIGYgPSBvcGVuKCJwYXNzY29kZS50eHQiLCAidysiKQ0KICAgIGYud3JpdGUocGFzc2MpDQogICAgZi5jbG9zZSgpDQoNCiMgUkVBRCBGSUxFIFBBU1MgSUYgRVhJU1RTDQoNCg0KZGVmIHJlYWRwYXNzKCk6DQogICAgZiA9IG9wZW4oZmlsZSwgInIiKQ0KICAgIGlmIGYubW9kZSA9PSAncic6DQogICAgICAgIHBhc3NjID0gZi5yZWFkKCkNCg0KICAgIHJldHVybiBwYXNzYw0KDQoNCiMgQVVUSCBQUkVNSVVNIFZFUlNJT04NCmRlZiBhdXRocHJlbXZlcigpOg0KICAgIGNsZWFyKCkNCiAgICBiYW5uZXIoKQ0KDQogICAgIyBNQVNVS0FOIFBBU1MgUkVHSVNURVINCiAgICB0cnk6DQogICAgICAgIGlucHV0cGFzcyA9IGJpcnUyICsgJ1xyJyArIHB1dGloMiArICc+PiAnICsgcmVzICsgXA0KICAgICAgICAgICAga3VuaW5nMiArICdTaWxhaGthbiBNYXN1a2FuIFBhc3Njb2RlIEFuZGE6ICcgKyByZXMNCiAgICAgICAgcGFzc2lucHV0ID0gaW5wdXRpbWVvdXQocHJvbXB0PWlucHV0cGFzcywgdGltZW91dD02MDApDQogICAgICAgIGlmIHBhc3NpbnB1dCA9PSAiIjoNCiAgICAgICAgICAgIGF1dGhwcmVtdmVyKCkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHBhc3Njb2RlID0gY2hlY2twcmVtc3RhdHVzKHBhc3NpbnB1dCkNCiAgICAgICAgICAgIGlmIGludChwYXNzY29kZSkgIT0gMToNCiAgICAgICAgICAgICAgICBjbGVhcigpDQogICAgICAgICAgICAgICAgYmFubmVyKCkNCiAgICAgICAgICAgICAgICBwcmludCgiUGFzc2NvZGUgWWFuZyBBbmRhIE1hc3VrYW4gU2FsYWgsIFNpbGFoa2FuIENvYmEgS2VtYmFsaSIpDQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgICAgIGF1dGhwcmVtdmVyKCkNCiAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgY3JlYXRlZmlsZXBhc3MocGFzc2lucHV0KQ0KDQogICAgZXhjZXB0IFRpbWVvdXRPY2N1cnJlZDoNCiAgICAgICAgYXV0aHByZW12ZXIoKQ0KDQoNCiMgVkVSU0lPTiBWQUxJREFURQ0KaWYgZnJlZXZlcnNpb24gaXMgVHJ1ZToNCiAgICAjIGF1dGhmcmVldmVyKCkNCiAgICBwYXNzDQplbHNlOg0KICAgIGZpbGUgPSBwYXRobGliLlBhdGgoInBhc3Njb2RlLnR4dCIpDQogICAgaWYgZmlsZS5leGlzdHMoKToNCiAgICAgICAgcGFzc2NvZGUgPSByZWFkcGFzcygpDQogICAgICAgIGNoZWNrID0gY2hlY2twcmVtc3RhdHVzKHBhc3Njb2RlKQ0KICAgICAgICBpZiBpbnQoY2hlY2spICE9IDE6DQogICAgICAgICAgICBhdXRocHJlbXZlcigpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwYXNzDQogICAgZWxzZToNCiAgICAgICAgYXV0aHByZW12ZXIoKQ0KDQojIERFSyBNT0RFIFJVTiBBS1RJRg0KDQoNCmRlZiBjaGVja21vZGVydW4oKToNCiAgICBtb2RlcnVuID0gMA0KICAgIHVydXQgPSBpbnQobXlfbmFtZXNwYWNlLmJldHNldCkNCiAgICBpZiBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMSJdWyJUb2dnbGUiXSA9PSAiT04iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUxIl1bIlRvZ2dsZSJdID09ICJvbiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTEiXVsiVG9nZ2xlIl0gPT0gIk9uIjoNCiAgICAgICAgbW9kZXJ1biArPSAxDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KICAgIGlmIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUyIl1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTIiXVsiVG9nZ2xlIl0gPT0gIm9uIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMiJdWyJUb2dnbGUiXSA9PSAiT24iOg0KICAgICAgICBtb2RlcnVuICs9IDENCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQogICAgaWYgb2JqWyJCZXRzZXQiXVt1cnV0XVsiTW9kZTMiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkJldHNldCJdW3VydXRdWyJNb2RlMyJdWyJUb2dnbGUiXSA9PSAib24iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIk1vZGUzIl1bIlRvZ2dsZSJdID09ICJPbiI6DQogICAgICAgIG1vZGVydW4gKz0gMQ0KICAgIGVsc2U6DQogICAgICAgIHBhc3MNCiAgICBpZiBvYmpbIkJldHNldCJdW3VydXRdWyJGaWJvbmFjY2kxIl1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJCZXRzZXQiXVt1cnV0XVsiRmlib25hY2NpMSJdWyJUb2dnbGUiXSA9PSAib24iIG9yIG9ialsiQmV0c2V0Il1bdXJ1dF1bIkZpYm9uYWNjaTEiXVsiVG9nZ2xlIl0gPT0gIk9uIjoNCiAgICAgICAgbW9kZXJ1biArPSAxDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KDQogICAgcmV0dXJuIG1vZGVydW4NCg0KIyBWQUxJREFTSSBNT0RFIFJVTg0KDQoNCmRlZiB2YWxpZGF0ZW1vZGVydW4obW9kZXJ1bik6DQogICAgaWYgbW9kZXJ1biA+IDE6DQogICAgICAgIGNsZWFyKCkNCiAgICAgICAgYmFubmVyKCkNCg0KICAgICAgICBwcmludChiaXJ1MiArICdccicgKyBwdXRpaDIgKyAnPj4gJyArIHJlcyArIG1lcmFoMiArICdBbmRhIE1lbmdha3RpZmthbiBMZWJpaCBEYXJpIDEgTW9kZSEhJyArDQogICAgICAgICAgICAgIHJlcyArIHB1dGloMiArICcsIFNpbGFoa2FuIENlayBLZW1iYWxpIEZpbGUgc2V0dGluZ3MuanNvbiBBbmRhJyArIHJlcykNCiAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICBzeXMuZXhpdCgpDQogICAgZWxzZToNCiAgICAgICAgcGFzcw0KDQoNCmRlZiBhdXRoMmZhKCk6DQogICAgIyBDTEVBUiBCRUZPUkUNCiAgICBjbGVhcigpDQogICAgYmFubmVyKCkNCg0KICAgIHRyeToNCiAgICAgICAgaW5wdXRvdHAgPSBiaXJ1MiArICdccicgKyBwdXRpaDIgKyAnPj4gJyArIHJlcyArIGt1bmluZzIgKyBcDQogICAgICAgICAgICAnU2lsYWhrYW4gbWFzdWthbiBrb2RlIGdvb2dsZSBhdXRoZW50aWNhdG9yIGFuZGEgOiAnICsgcmVzDQogICAgICAgIG90cGlucHV0ID0gaW5wdXRpbWVvdXQocHJvbXB0PWlucHV0b3RwLCB0aW1lb3V0PTYwMCkNCiAgICAgICAgaWYgb3RwaW5wdXQgPT0gIiI6DQogICAgICAgICAgICBhdXRoMmZhKCkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHJldHVybiBpbnB1dG90cA0KDQogICAgZXhjZXB0IFRpbWVvdXRPY2N1cnJlZDoNCiAgICAgICAgYXV0aDJmYSgpDQoNCg0KbWRjb3VudCA9IGNoZWNrbW9kZXJ1bigpDQp2YWxpZGF0ZW1vZGVydW4obWRjb3VudCkNCg0KdXNlcm5hbWUgPSBvYmpbIkFjY291bnQiXVsiVXNlcm5hbWUiXQ0KcGFzc3dvcmQgPSBvYmpbIkFjY291bnQiXVsiUGFzc3dvcmQiXQ0KIyBTRVQgVVAgQVBJIEFLU0VTIEZST00gOTk5RE9HRS5DT00NCmlmIG9ialsiQWNjb3VudCJdWyJBUEkgQWNjZXNzIl0gPT0gIk9GRiIgb3Igb2JqWyJBY2NvdW50Il1bIkFQSSBBY2Nlc3MiXSA9PSAib2ZmIiBvciBvYmpbIkFjY291bnQiXVsiQVBJIEFjY2VzcyJdID09ICJPZmYiOg0KICAgIGFwaUFrc2VzID0gImNkNmY5ODQzYjA1ZjQwNDJhZDFkNDA2MGQyOTBiMmZkIg0KZWxzZToNCiAgICBhcGlBa3NlcyA9IG9ialsiQWNjb3VudCJdWyJBUEkgQWNjZXNzIl0NCg0KaWYgb2JqWyJBY2NvdW50Il1bIjJGQSJdID09ICJPTiIgb3Igb2JqWyJBY2NvdW50Il1bIjJGQSJdID09ICJvbiIgb3Igb2JqWyJBY2NvdW50Il1bIjJGQSJdID09ICJPbiI6DQogICAgb3Rwc3RhdHVzID0gVHJ1ZQ0KICAgIG90cCA9IGF1dGgyZmEoKQ0KZWxzZToNCiAgICBvdHBzdGF0dXMgPSBGYWxzZQ0KDQoNCmRlZiBzdG9wYmV0KHByb2ZpdCwgYmwsIG1i'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))